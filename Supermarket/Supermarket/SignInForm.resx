<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>